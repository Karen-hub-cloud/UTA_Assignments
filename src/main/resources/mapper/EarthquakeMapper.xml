<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.EarthquakeDao" >
  <resultMap id="BaseResultMap" type="com.blog.domain.Earthquake" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="depth" property="depth" jdbcType="DOUBLE" />
    <result column="mag" property="mag" jdbcType="DOUBLE" />
    <result column="magType" property="magType" jdbcType="VARCHAR" />
    <result column="net" property="net" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="horizontalError" property="horizontalError" jdbcType="DOUBLE" />
    <result column="magError" property="magError" jdbcType="DOUBLE" />
    <result column="magNst" property="magNst" jdbcType="DOUBLE" />
    <result column="locationSource" property="locationSource" jdbcType="VARCHAR" />
  </resultMap>

  <select id="selectByWord" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    *
    from earthquake
    where place LIKE CONCAT(CONCAT('%', #{word}), '%')
  </select>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    *
    from earthquake
    where id = #{id}
  </select>

  <select id="queryAll" resultMap="BaseResultMap" >
    select *
    from earthquake
  </select>

  <select id="searchLargestN" resultMap="BaseResultMap">
        SELECT * FROM earthquake where net = #{net} and mag between #{min} and #{max} ORDER BY mag DESC LIMIT #{n}
  </select>

  <select id="searchByPlace" resultMap="BaseResultMap">
        SELECT * FROM earthquake WHERE place
        LIKE CONCAT(CONCAT('%', #{word}), '%')
  </select>

  <select id="countScale" resultMap="BaseResultMap">
        SELECT * FROM earthquake WHERE time LIKE CONCAT(CONCAT('%', #{time}), '%') ORDER BY magNst DESC LIMIT 1
  </select>

  <select id="recentlyQuakes" resultMap="BaseResultMap">
    SELECT COUNT(*) FROM earthquake WHERE magType= #{magType} AND MAG >= #{minMag} AND Mag &lt;= #{maxMag}
    AND DATE_SUB(CURDATE(), INTERVAL #{recent} DAY) &lt;= date(time)
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from earthquake
    where id = #{id, jdbcType=VARCHAR}
  </delete>

  <!--<insert id="insert" parameterType="com.blog.domain.DataDemo" >
    insert into earthquake (name, num,
      picture, keywords)
    values (#{name,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR},
      #{picture,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR})
  </insert>-->

  <!--<update id="update" parameterType="com.blog.domain.DataDemo" >
    update earthquake
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>
